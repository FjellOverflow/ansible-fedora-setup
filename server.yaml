---
- name: Setup
  hosts: all
  become: true
  vars_prompt:
    - name: samba_password
      prompt: Enter samba password
  tasks:
    - name: Get current user
      set_fact:
        username: "{{ lookup('env', 'USER') }}"

    - name: Upgrade packages
      ansible.builtin.dnf:
        name: "*"
        state: latest

    - name: Install packages
      ansible.builtin.dnf:
        name:
          - bat
          - curl
          - git
          - ncdu
          - rsync
          - samba
          - tmux
          - tree
          - ufw
          - wget
          - zsh

    - name: Install external packages
      include_tasks: "tasks/packages/install-{{ item }}.yaml"
      loop:
        - docker
        - tailscale

    - import_tasks: tasks/setup-zsh.yaml

    - name: Write .zshrc
      copy:
        src: "templates/server.zshrc"
        dest: "/home/{{username}}/.zshrc"

    - name: Write .tmux.conf
      copy:
        src: "templates/.tmux.conf"
        dest: "/home/{{username}}/.tmux.conf"   

    - import_tasks: tasks/setup-passwordless-sudo.yaml

    - name: Disable ssh password auth
      ansible.builtin.lineinfile:
        dest: /etc/ssh/sshd_config
        regexp: "^#PasswordAuthentication yes"
        line: "PasswordAuthentication no"
      register: sshd_config

    - name: Restart ssh daemon
      ansible.builtin.service:
        name: sshd
        state: restarted
      when: sshd_config.changed

    - name: Start samba service
      ansible.builtin.service:
        name: smb
        state: started

    - name: Configure {{username}} as samba user
      shell: >
        (pdbedit --user={{ username }} 2>&1 > /dev/null)
        || (echo '{{ samba_password }}'; echo '{{ samba_password }}')
        | smbpasswd -s -a {{ username }}
      register: samba_user_created
      changed_when: "'Added user' in samba_user_created.stdout"

    - name: Restart samba daemon
      ansible.builtin.service:
        name: smb
        state: restarted
      when: samba_user_created.changed

    - name: Enable ufw
      community.general.ufw:
        state: enabled

    - name: Allow ssh in ufw
      community.general.ufw:
        rule: allow
        name: 'ssh'

    - name: Allow samba in ufw
      community.general.ufw:
        rule: allow
        name: 'cifs'
